@startuml

hide footbox

 -> ":DepositCommand":

activate ":DepositCommand"
":DepositCommand" -> ":DepositCommand": execute(data, ui)
activate  ":DepositCommand"
":DepositCommand" -> ":data": getDeposits()

activate ":data"
return Deposits: ArrayList<Deposit>
deactivate ":data"

":DepositCommand" -> ":data": getDeposits()

activate ":data"
return Deposits: ArrayList<Deposit>


activate ":DepositAction"
":DepositCommand" -> ":DepositAction" : Deposits, ui
activate ":data"
":DepositAction" -> ":DepositCommand" : DepositAction :DepositAction
deactivate ":DepositAction"


alt action is add
":DepositCommand" -> ":DepositCommand": executeAddDeposit(depositAction, requiredParams, optionalParams);
activate ":DepositCommand"
":DepositCommand" -> ":DepositAction" : depositName, depositAmount, depositDate
activate ":DepositAction"
":DepositAction" -> ":DepositAction" : addDeposit(depositName, depositAmount, depositDate)
activate ":DepositAction"

return
return

deactivate ":DepositCommand"


else action is find
":DepositCommand" -> ":DepositCommand": executeFindDeposit(depositAction, requiredParams)

activate ":DepositCommand"
":DepositCommand" -> ":DepositAction" : depositNo
activate ":DepositAction"
":DepositAction" -> ":DepositAction" : findDeposit(depositNo)
activate ":DepositAction"

return
return

deactivate ":DepositCommand"


else action is del
":DepositCommand" -> ":DepositCommand": executeDelDeposit(DepositAction, requiredParams)
activate ":DepositCommand"
":DepositCommand" -> ":DepositAction" : depositNo
activate ":DepositAction"
":DepositAction" -> ":DepositAction" : deleteDeposit(depositNo)
activate ":DepositAction"

return
return

deactivate ":DepositCommand"

else action is list

":DepositCommand" -> ":DepositCommand": executeListDeposit(DepositAction, optionalParams)
activate ":DepositCommand"
":DepositCommand" -> ":DepositAction" : depositFrom, depositTo
activate ":DepositAction"
":DepositAction" -> ":DepositAction" : listDeposits()
activate ":DepositAction"

return
return

deactivate ":DepositCommand"

else action is clear
":DepositCommand" -> ":DepositCommand": executeClearDeposit(DepositAction, optionalParams)
activate ":DepositCommand"
":DepositCommand" -> ":DepositAction" : depositFrom, depositTo
activate ":DepositAction"
":DepositAction" -> ":DepositAction" : clearDeposits(depositFrom, depositTo)
activate ":DepositAction"
return
return

deactivate ":DepositCommand"

else action is help
":DepositCommand" -> ":DepositCommand": executeDepositHelp(depositAction)
activate ":DepositCommand"
":DepositCommand" -> ":DepositAction"
activate ":DepositAction"
":DepositAction" -> ":DepositAction" : depositHelp()
activate ":DepositAction"
return
return


deactivate ":DepositCommand"



end
":DepositCommand" -> ":data": exportData()
activate ":data"
return

deactivate ":data"
destroy ":data"

deactivate ":data"
deactivate ":DepositCommand"




@enduml