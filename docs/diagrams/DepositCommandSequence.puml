@startuml

hide footbox

participant DepositCommand
participant Data
participant DepositAction
participant DepositUIResponse
actor User

 -> "DepositCommand":

activate "DepositCommand"
"DepositCommand" -> "DepositCommand": execute(data, ui)
activate  "DepositCommand"
"DepositCommand" -> "Data": getDeposits()
activate "Data"
return depositList: Deposit[]
deactivate "Data"

"DepositCommand" -> "DepositAction" ** : (depositList,ui)
activate "DepositAction"

"DepositAction" -> "DepositUIResponse" ** : (ui)
activate "DepositUIResponse"
"DepositUIResponse" --> "DepositAction"
deactivate "DepositUIResponse"

return DepositAction: DepositAction
deactivate "DepositAction"


alt actions is add
"DepositCommand" -> "DepositCommand": executeAddDeposit(depositAction, requiredParams, optionalParams)
activate "DepositCommand"
"DepositCommand" -> "DepositAction" : addDeposit(depositName, depositAmount, depositDate)
activate "DepositAction"
"DepositAction" -> "DepositUIResponse" : printDepositAddSuccessful(deposit)
activate "DepositUIResponse"
"DepositUIResponse" -> User
return
return

deactivate "DepositCommand"

else actions is del
"DepositCommand" -> "DepositCommand": executeDelDeposit(depositAction, requiredParams)
activate "DepositCommand"
"DepositCommand" -> "DepositAction" : deleteDeposit(depositId)
activate "DepositAction"
"DepositAction" -> "DepositUIResponse" : printDepositDelSuccessful(deletedDeposit)
activate "DepositUIResponse"
"DepositUIResponse" -> User
return
return

deactivate "DepositCommand"

else actions is find
"DepositCommand" -> "DepositCommand": executeFindDeposit(depositAction, requiredParams)
activate "DepositCommand"
"DepositCommand" -> "DepositAction" : findDeposits(depositName)
activate "DepositAction"
"DepositAction" -> "DepositUIResponse" : printFindDeposits(filteredDeposits)
activate "DepositUIResponse"
"DepositUIResponse" -> User
return
return

deactivate "DepositCommand"

else actions is clear
"DepositCommand" -> "DepositCommand": executeClearDeposit(depositAction, optionalParams)
activate "DepositCommand"
"DepositCommand" -> "DepositAction" : clearDeposits(from, to)
activate "DepositAction"
"DepositAction" -> "DepositUIResponse" : printClearDeposits(depositList)
activate "DepositUIResponse"
"DepositUIResponse" -> User
return
return

deactivate "DepositCommand"

else actions is list
"DepositCommand" -> "DepositCommand": executeListDeposit(depositAction, optionalParams)
activate "DepositCommand"
"DepositCommand" -> "DepositAction" : listDeposits()
activate "DepositAction"
"DepositAction" -> "DepositUIResponse" : printListDeposits(previousDeposits, currentDeposits)
activate "DepositUIResponse"
"DepositUIResponse" -> User
return
return

deactivate "DepositCommand"

else actions is help
"DepositCommand" -> "DepositCommand": executeHelpDeposit(depositAction)
activate "DepositCommand"
"DepositCommand" -> "DepositAction" : depositHelp()
activate "DepositAction"
"DepositAction" -> "DepositUIResponse" : printDepositCommands()
activate "DepositUIResponse"
"DepositUIResponse" -> User
return
return

deactivate "DepositCommand"
end

"DepositCommand" -> "Data": exportData()
activate "Data"
return
deactivate "Data"

destroy "DepositCommand"
deactivate "DepositCommand"

@enduml