@startuml

hide footbox

 -> ":StatsCommand":

activate ":StatsCommand"
":StatsCommand" -> ":StatsCommand": execute(data, ui)
activate  ":BudgetCommand"
":BudgetCommand" -> ":data": getBudgets()
activate ":data"
return budgetList: ArrayList<Budget>
deactivate ":data"

activate  ":BudgetCommand"
":BudgetCommand" -> ":data": getExpenses()
activate ":data"
return expenses: ArrayList<Expense>



":BudgetCommand" -> ":BudgetAction" : budgetList,ui
activate ":BudgetAction"
":BudgetAction" -> ":BudgetCommand" : budgetAction :BudgetAction
deactivate ":BudgetAction"

alt actions is add
activate  ":BudgetCommand"
":BudgetCommand" -> ":BudgetCommand": executeAddBudget(budgetAction, requiredParams);
activate ":BudgetCommand"
":BudgetCommand" -> ":BudgetAction" : budgetName, budgetLimit
activate ":BudgetAction"
":BudgetAction" -> ":BudgetAction" : addBudget(budgetName, budgetLimit)
activate ":BudgetAction"
return
return


else actions is set
activate  ":BudgetCommand"
":BudgetCommand" -> ":BudgetCommand": executeSetBudget(budgetAction, requiredParams)
activate ":BudgetCommand"
":BudgetCommand" -> ":BudgetAction" : budgetName, budgetLimit
activate ":BudgetAction"
":BudgetAction" -> ":BudgetAction" : setBudget(budgetName, budgetLimit)
activate ":BudgetAction"
return
return


else actions is del
activate  ":BudgetCommand"
":BudgetCommand" -> ":BudgetCommand": executeDelBudget(budgetAction, requiredParams, expenses)
activate ":BudgetCommand"
":BudgetCommand" -> ":BudgetAction" : budgetName, budgetLimit
activate ":BudgetAction"
":BudgetAction" -> ":BudgetAction" : deleteBudget(budgetName, expenses)
activate ":BudgetAction"
return
return

else actions is list
activate  ":BudgetCommand"
":BudgetCommand" -> ":BudgetCommand": executeListBudget(budgetAction, optionalParams, expenses)
activate ":BudgetCommand"

":BudgetCommand" -> ":LocalDate":
activate ":LocalDate"
":LocalDate" -> ":LocalDate": getMonthValue()
activate ":LocalDate"
return month: Integer
return month

":BudgetCommand" -> ":LocalDate":
activate ":LocalDate"
":LocalDate" -> ":LocalDate": getYear()
activate ":LocalDate"
return year: Integer
return year

":BudgetCommand" -> ":BudgetAction" : month, year, expenses
activate ":BudgetAction"
":BudgetAction" -> ":BudgetAction" : printBudgets(month, year, expenses)
activate ":BudgetAction"
return
return


else actions is help
activate  ":BudgetCommand"
":BudgetCommand" -> ":BudgetCommand": executeBudgetHelp(budgetAction)
activate ":BudgetCommand"
":BudgetCommand" -> ":BudgetAction"
activate ":BudgetAction"
":BudgetAction" -> ":BudgetAction" : budgetHelp()
activate ":BudgetAction"
return
return


deactivate ":BudgetCommand"
deactivate ":BudgetCommand"
deactivate ":BudgetCommand"
deactivate ":BudgetCommand"
deactivate ":BudgetCommand"
deactivate ":BudgetCommand"
deactivate ":BudgetCommand"
deactivate ":BudgetCommand"
deactivate ":BudgetCommand"
deactivate ":BudgetCommand"
deactivate ":BudgetCommand"
deactivate ":BudgetCommand"


":BudgetCommand" -> ":data": exportData()
activate ":data"
return

deactivate ":data"
destroy ":data"


end



@enduml